version: '3.8'

services:
  # Elasticsearch service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    container_name: marc-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=marc-rag-password-2024
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - marc-rag-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s -u elastic:marc-rag-password-2024 http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # Combined frontend/backend application
  marc-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marc-app
    environment:
      - NODE_ENV=production
      - PORT=10000
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=marc-rag-password-2024
      - OLLAMA_URL=http://host.docker.internal:11434
      - GEMINI_API_URL=https://generativelanguage.googleapis.com/v1/models/gemini-2.0-flash:generateContent
      - GEMINI_API_KEY=API_KEY_HERE
      - GEMINI_MODEL=gemini-2.0-flash
      - RAG_CONTEXT_WINDOW=8000
    ports:
      - "10000:10000"
    volumes:
      - ./marc.mrc:/app/marc.mrc:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - marc-rag-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:10000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  elasticsearch_data:
    driver: local

networks:
  marc-rag-network:
    driver: bridge